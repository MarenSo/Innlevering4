---
title: "R Notebook"
output:
  html_document:
    df_print: paged
---

```{r setup}
suppressPackageStartupMessages({
library(PxWebApiData)
library(tidyverse)
library(lubridate)
library(dplyr)
library(stringr)
})
knitr::opts_chunk$set(echo=FALSE, include = FALSE)
```

#Gjennomsnittlig kvadratmeterpris

```{r kommuner}
# vector med relevante kommunenummer
load("knr.Rdata")
```


```{r loade data}
load("knr.Rdata")
```

```{r pm2_raw}
pm2_raw <- ApiData(
urlToData = "06035",
Region = knr,
ContentsCode = "KvPris",
Boligtype = "01",
Tid = c(as.character(2002:2017))
)
```

```{r forenkle navn}
names(pm2_raw)[[1]] <- "desc"
```

```{r data_og_navn}
pm2 <- pm2_raw$dataset %>% 
  #NAstatus ikke definert ovenfor
  select(-Boligtype, -ContentsCode) %>% 
  rename(
    knr = Region,
    aar = Tid,
    pm2 = value) %>% 
  mutate(
    knavn = pm2_raw$desc$region
    )
```


```{r teste mønster}
load("test_string_tib.Rdata")
# Legg inn regex mønster
moenster <- '\\s*\\([\\d\\s-]*\\d*\\)\\s*$'
test_string_tib %>%
mutate(
knavn = str_replace(knavn, moenster, "")
)
```


```{r endre til nye knavn}
pm2 <- pm2 %>%
mutate(
knavn = str_replace(knavn, moenster, "")
)
```

```{r antall na}
pm2%>% 
  summarise(
    across(
      everything(), 
      ~ sum(is.na(.))
      )
    )
```

```{r}
# Alternativ måte å gjøre det samme på, men summarise across med bruk av anonym funksjon er
# jo temmelig fancy i forhold til min ;-)
sum(is.na(pm2))
```

```{r complete cases 2006_1}
pm2fra2006 <- pm2 %>% 
  filter(aar >= 2006) %>% 
  pivot_wider(
    names_from = aar,
    values_from = pm2
    )
```

Complete cases i perioden 2006-2017: 

```{r complete cases 2006_2}
pm2fra2006 %>%
  complete.cases() %>% 
  sum()
```


```{r complete cases 2008_1}
pm2fra2008 <- pm2 %>% 
  filter (aar >= 2008) %>% 
  pivot_wider(
    names_from = aar,
    values_from = pm2
    )
```

Complete cases i perioden 2008-2017: 

```{r complete cases 2008_2}
pm2fra2008 %>%
  complete.cases() %>% 
  sum()
```



```{r legge til i pm2 A}
# Virker, men kanskje unødvendig komplisert
# pm2 <- pm2 %>% 
# filter (aar >= 2008) %>% 
#  left_join(pm2fra2008,
#            by = c("knr", "knavn")) %>%
# na.omit(pm2)
#
#Mitt forslag. Husk at & betyr og
pm2 <- pm2 %>% 
  filter (
    aar >= 2008 & complete.cases(.) == TRUE
    )
```



```{r rydde}
# Time to clean up
rm(test_string_tib, pm2_raw, pm2fra2006, pm2fra2008)
```


#Befolkning, hente data fra SSB
```{r fra ssb ya}
# Her vil jeg foreslå å ikke hente ut dataset-biten direkte siden kjønnskoding er litt usikker
# Er 1, mann eller kvinne?
pop_08_17_ya_raw <- ApiData (
  urlToData = "07459",
  Region = knr,
  Kjonn = c(1, 2),
  Alder = list("agg:TredeltGrupperingB2",
                 c("F20-64")),
  Tid = c(as.character(2008:2017))
)
```


```{r}
# Bearbeiding av befolkning
tmp <- pop_08_17_ya_raw$dataset %>% 
  mutate(
    #henter kjønn fra første listen (beskrivelse listen). Bruker [[1]] for å unngå det lange navnet
    Kjonn = pop_08_17_ya_raw[[1]]$kjønn
  ) %>% 
  select(
    -Alder,
    -ContentsCode
  )

pop_08_17_ya_raw <- tmp
rm(tmp)
```


```{r utvidelse av ya}
pop_08_17_ya <- pop_08_17_ya_raw %>%
  pivot_wider(
    id_cols = c(Region, Tid),
    names_from = Kjonn,
    values_from = value
 ) %>% 
  rename(
    knr = Region,
    aar = Tid,
    ya_menn = Menn,
    ya_kvinner = Kvinner
  )
```


```{r Legge inn korrekte navn ya}
# Meget lettere vha tidyverse, se ovenfor
# names(pop_08_17_ya)[[1]] <- "knr"
# names(pop_08_17_ya)[[2]] <- "aar"
# names(pop_08_17_ya)[[3]] <- "ya_menn"
# names(pop_08_17_ya)[[4]] <- "ya_kvinner"
```

```{r Lager en total av ya}
pop_08_17_ya <- pop_08_17_ya %>% 
  mutate(
    ya_total = ya_menn + ya_kvinner
    )

# unødvendig, navnet er satt i mutate
# names(pop_08_17_ya)[[5]] <- "ya_total"
```

```{r Antall observasjoner ya}
dim(pop_08_17_ya)
```

```{r navn ya}
names(pop_08_17_ya)
```

```{r fra ssb hele befolkning}
# Igjen ville jeg her ikke tatt dataset direkte slik at jeg fikk tilgang til kjønn i første liste element
pop_08_17_raw <- ApiData (
  urlToData = "07459",
  Region = knr,
  Kjonn = c(1,2),
  Alder = list("agg:TodeltGrupperingB",
                 c("H17", "H18")),
  Tid = c(as.character(2008:2017))
)

tmp <- pop_08_17_raw$dataset %>% 
  mutate(
    Kjonn = pop_08_17_raw[[1]]$kjønn
  ) %>% 
  rename(
    knr = Region,
    alder = Alder,
    aar = Tid,
  ) %>% 
  select(-ContentsCode)

pop_08_17_raw <- tmp
rm(tmp)
```


```{r utvidelse av hele befolkning}
# Vil anbefale å først rename variablene før en gjør pivot_wider
pop_08_17 <- pop_08_17_raw %>%
  pivot_wider(
    names_from = Kjonn,
    values_from = value
    ) %>% 
  pivot_wider(
    names_from = alder,
    values_from = c(Menn, Kvinner)
  ) %>% 
  mutate(
    menn = Menn_H17 + Menn_H18,
    kvinner = Kvinner_H17 + Kvinner_H18,
    totalt = menn + kvinner
  ) %>% 
  select(knr, aar, menn, kvinner, totalt)
```

```{r Legge inn korrekte navn}
# igjen rename i pipe som ovenfor mye lettere og også klarere kode
# names(pop_08_17)[[1]] <- "knr"
# names(pop_08_17)[[2]] <- "alder"
# names(pop_08_17)[[3]] <- "aar"
# names(pop_08_17)[[4]] <- "menn"
# names(pop_08_17)[[5]] <- "kvinner"
```

```{r andel yrkesaktive}
ya_prosent <- cbind(pop_08_17[,1:2], (pop_08_17_ya[,3:5]/pop_08_17[,3:5])*100)
```



```{r pivot_wider}
pop_08_17 <- pop_08_17 %>%
pivot_wider(names_from = alder,
            values_from = c(menn, kvinner))
```

```{r endre til menn_t og kvinner_t}
pop_08_17 <- pop_08_17 %>%
  mutate(kvinner_t = kvinner_H17 + kvinner_H18,
         menn_t = menn_H17 + menn_H18) %>%
  mutate(totalt_t = kvinner_t + menn_t) 
```

```{r Endre til riktig}
pop_08_17 <- pop_08_17 %>%
  select(knr, aar, menn_t, kvinner_t, totalt_t)
```


```{r antall observasjoner hele befolkningen}
dim(pop_08_17)
```

```{r navn hele befolkningen}
names(pop_08_17)
```

```{r sammenslåing}
pop_08_17_ya_p <- pop_08_17_ya %>%
  left_join(pop_08_17,
            by = c("knr", "aar"))
```


```{r utregninger til prosent}
pop_08_17_ya_p  <- pop_08_17_ya_p  %>%
mutate(kvinner_ya_p = (ya_kvinner/kvinner_t)*100,
       menn_ya_p = (ya_menn/menn_t)*100,
       totalt_ya_p = (ya_total/totalt_t)*100)
```

```{r velge variabler}
pop_08_17_ya_p  <- pop_08_17_ya_p  %>%
select (knr, aar, menn_ya_p, kvinner_ya_p, totalt_ya_p)
```

```{r oppryddning}
rm(pop_08_17_raw, pop_08_17_ya_raw, pop_08_17, pop_08_17_ya)
```

```{r legge til i pm2 B}
pm2 <- pm2 %>%
  inner_join(pop_08_17_ya_p,
            by = c("knr", "aar"))
```


#Inntektsdesiler
```{r fra ssb}
inc_k_08_17_raw <- ApiData (
  urlToData = "12558",
  Region = knr,
  Desiler = c("01", "02", "09", "10"),
 ContentsCode = "AndelHush",
  InntektSkatt = "00",
  Tid = c(as.character(2008:2017))
) $dataset %>% 
  select(-NAstatus)
```

```{r}
inc_k_08_17_raw <- inc_k_08_17_raw %>% 
pivot_wider(names_from = Desiler,
            values_from = value)
```

```{r kalkulerere kvantiler}
inc_k_08_17_raw <- inc_k_08_17_raw %>% 
mutate(inc_k1 = 01+02,
       inc_k5 = 09+10) 
```



```{r lage inc_k_08_17}
inc_k_08_17 <- inc_k_08_17_raw %>%
select(Region, Tid, inc_k1, inc_k5)
```



```{r Legge inn korrekte navn desiler}
inc_k_08_17 <- inc_k_08_17
names(inc_k_08_17)[[1]] <- "knr"
names(inc_k_08_17)[[2]] <- "aar"
names(inc_k_08_17)[[3]] <- "inc_k1"
names(inc_k_08_17)[[4]] <- "inc_k5"
```

```{r test av navn og observasjoner}
names(inc_k_08_17)
dim(inc_k_08_17)
```

```{r legge til i pm2_2}
pm2 <- pm2 %>%
  inner_join(inc_k_08_17,
            by = c("knr", "aar"))
```


```{r rydde2}
rm(inc_k_08_17_raw)
```


#Befolkning med utdannelse

```{r fra ssb utdannelse}
uni_p_raw <- ApiData (
  urlToData = "09429",
  Region = knr,
  Nivaa = c("03a", "04a"), 
  Kjonn = TRUE,
  ContentsCode ="PersonerProsent",
  Tid = c(as.character(2008:2017))
)
```

```{r uni_p}
uni_p <- uni_p_raw
```

```{r riktige variabler}
uni_p <- tibble(
  knr = uni_p$dataset$Region,
  aar = uni_p$dataset$Tid,
  Kjonn = uni_p$`09429: Personer 16 år og over, etter region, nivå, kjønn, statistikkvariabel og år`$kjønn,
  nivaa = uni_p$`09429: Personer 16 år og over, etter region, nivå, kjønn, statistikkvariabel og år`$nivå,
  uni_p = uni_p$dataset$value
)
```


```{r}
uni_p <- uni_p[, c("knr","Kjonn","nivaa", "uni_p", "aar")]
```


```{r Test}
names(uni_p)
dim(uni_p)
head(uni_p, n = 5)
```

```{r fct_recode}
uni_p <- uni_p %>% 
  mutate(
    nivaa = fct_recode(nivaa, uni_k = "Universitets- og høgskolenivå, kort",
             uni_l = "Universitets- og høgskolenivå, lang")
  )
```

```{r fct_recode 2}
uni_p <- uni_p %>% 
  mutate(
    Kjonn = fct_recode (Kjonn, mf = "Begge kjønn",
             f = "Kvinner",
             m = "Menn")
  ) #Får feilmelding på denne hele tiden, inkludert når jeg kjører alle chunkene på nytt, men ser ut som det har endret seg i df da, så får bare være-  
```

```{r nye variabler}
uni_p <- uni_p %>% 
  pivot_wider(
     id_cols = c(knr,aar),
     names_from = c(nivaa, Kjonn),
     values_from = uni_p
     )
```

```{r merge utd}
pm2 <- pm2 %>%
  inner_join(uni_p,
            by = c("knr", "aar"))
```

```{r Rydde3}
rm(uni_p_raw)
```



#Handelsomsetning

```{r fra ssb handelsomsetning}
trade_08_17_raw <- ApiData (
  urlToData = "04776",
  Region = knr,
  ContentsCode = "OmsPerInnb",
  Tid = c(as.character(2008:2017))
)
```

```{r}
trade_08_17 <- trade_08_17_raw
```

```{r velge variabler2}
trade_08_17 <- tibble(
  knr = trade_08_17$dataset$Region,
  aar = trade_08_17$dataset$Tid,
  trade_pc = trade_08_17$dataset$value
) 
```

```{r Test oms}
names(trade_08_17)
dim(trade_08_17)
head(trade_08_17, n = 5)
```


```{r merge trade}
pm2 <- pm2 %>%
  inner_join(trade_08_17,
            by = c("knr", "aar"))
```


```{r Rydde4}
rm(trade_08_17_raw)
```

#Ferdig
```{r sjekke pm2 A}
na.omit(pm2)
dim(pm2)
```



#Ferdig


```{r sjekke pm2 B}
dim(pm2)
```

```{r ordne litt for å få til å samsvare med oppgvtekst}
pm2 <- pm2 %>% select (knr,knavn,aar,pm2,menn_ya_p,kvinner_ya_p,totalt_ya_p,inc_k1,inc_k5,uni_k_mf,uni_k_m,uni_k_f,uni_l_mf,uni_l_m,uni_l_f,trade_pc)
```

```{r sjekke pm2 på nytt}
dim(pm2)
```
```{r lage csv}
write.csv(pm2,"C:/Users/maren/OneDrive/Skrivebord/Master/Fag/Data science/Innlevering4/Data/pm2.csv", row.names = FALSE)

```

