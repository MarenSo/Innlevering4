mutate(knavn = pm2_raw$desc$region) %>%
mutate(
knavn = pm2_raw$desc$region)
pm2 <- pm2_raw$dataset %>%
#NAstatus ikke definert ovenfor
select(-Boligtype, -ContentsCode) %>%
rename(
knr = Region,
aar = Tid,
pm2 = value) %>%
mutate(
knavn = pm2_raw$desc$region
)
load("test_string_tib.Rdata")
# Legg inn regex mønster
moenster <- '\\s*\\([\\d\\s-]*\\d*\\)\\s*$'
test_string_tib %>%
mutate(
knavn = str_replace(knavn, moenster, "")
)
pm2 <- pm2 %>%
mutate(
knavn = str_replace(knavn, moenster, "")
)
View(pm2)
# OBS! OBS! Her overskriver dere pm2 med resultatet av summarise. Derfor endret til pm2_NA
pm2_NA %>%
summarise(across(everything(), ~ sum(is.na(.))))
# OBS! OBS! Her overskriver dere pm2 med resultatet av summarise. Derfor endret til pm2_NA
pm2%>%
summarise(across(everything(), ~ sum(is.na(.))))
sum(is.na(pm2))
pm2fra2006 <- pm2 %>%
filter(aar >= 2006) %>%
pivot_wider(
names_from = aar,
values_from = pm2
)
pm2fra2006 %>%
complete.cases() %>%
sum()
pm2fra2008 <- pm2 %>%
filter (aar >= 2008) %>%
pivot_wider(
names_from = aar,
values_from = pm2
)
pm2fra2008 %>%
complete.cases() %>%
sum()
pm2_ag <- pm2 %>%
filter (
aar >= 2008,
complete.cases() == TRUE
)
pm2_ag <- pm2 %>%
filter (
aar >= 2008,
complete.cases(.) == TRUE
)
2665/11
2665/12
View(pm2_ag)
is.na(pm2_ag$pm2)
sum(is.na(pm2_ag$pm2))
pm2 <- pm2 %>%
filter (aar >= 2008) %>%
left_join(pm2fra2008,
by = c("knr", "knavn")) %>%
na.omit(pm2)
pm2_ag <- pm2 %>%
filter (
aar >= 2008
) %>%
filter(
complete.cases(.) == TRUE
)
sum(is.na(pm2_ag$pm2))
pm2_ag <- pm2 %>%
filter (
aar >= 2008 & complete.cases(.) == TRUE
)
# Virker, men kanskje unødvendig komplisert
# pm2 <- pm2 %>%
# filter (aar >= 2008) %>%
#  left_join(pm2fra2008,
#            by = c("knr", "knavn")) %>%
# na.omit(pm2)
#
#Mitt forslag. Husk at & betyr og
pm2 <- pm2 %>%
filter (
aar >= 2008 & complete.cases(.) == TRUE
)
rm(pm2_ag)
# Time to clean up
rm(test_string_tib, pm2_raw, pmfra2006, pmfra2008)
# Time to clean up
rm(test_string_tib, pm2_raw, pm2fra2006, pm2fra2008)
load("test_string_tib.Rdata")
# Legg inn regex mønster
moenster <- '\\s*\\([\\d\\s-]*\\d*\\)\\s*$'
test_string_tib %>%
mutate(
knavn = str_replace(knavn, moenster, "")
)
suppressPackageStartupMessages({
library(PxWebApiData)
library(tidyverse)
library(lubridate)
library(dplyr)
library(stringr)
})
knitr::opts_chunk$set(echo=FALSE, include = FALSE)
# vector med relevante kommunenummer
load("knr.Rdata")
load("knr.Rdata")
pm2_raw <- ApiData(
urlToData = "06035",
Region = knr,
ContentsCode = "KvPris",
Boligtype = "01",
Tid = c(as.character(2002:2017))
)
names(pm2_raw)[[1]] <- "desc"
pm2 <- pm2_raw$dataset %>%
#NAstatus ikke definert ovenfor
select(-Boligtype, -ContentsCode) %>%
rename(
knr = Region,
aar = Tid,
pm2 = value) %>%
mutate(
knavn = pm2_raw$desc$region
)
load("test_string_tib.Rdata")
# Legg inn regex mønster
moenster <- '\\s*\\([\\d\\s-]*\\d*\\)\\s*$'
test_string_tib %>%
mutate(
knavn = str_replace(knavn, moenster, "")
)
pm2 <- pm2 %>%
mutate(
knavn = str_replace(knavn, moenster, "")
)
pm2%>%
summarise(
across(
everything(),
~ sum(is.na(.))
)
)
# Alternativ måte å gjøre det samme på, men summarise across med bruk av anonym funksjon er
# jo temmelig fancy i forhold til min ;-)
sum(is.na(pm2))
pm2fra2006 <- pm2 %>%
filter(aar >= 2006) %>%
pivot_wider(
names_from = aar,
values_from = pm2
)
pm2fra2006 %>%
complete.cases() %>%
sum()
pm2fra2008 <- pm2 %>%
filter (aar >= 2008) %>%
pivot_wider(
names_from = aar,
values_from = pm2
)
pm2fra2008 %>%
complete.cases() %>%
sum()
# Virker, men kanskje unødvendig komplisert
# pm2 <- pm2 %>%
# filter (aar >= 2008) %>%
#  left_join(pm2fra2008,
#            by = c("knr", "knavn")) %>%
# na.omit(pm2)
#
#Mitt forslag. Husk at & betyr og
pm2 <- pm2 %>%
filter (
aar >= 2008 & complete.cases(.) == TRUE
)
# Time to clean up
rm(test_string_tib, pm2_raw, pm2fra2006, pm2fra2008)
pop_08_17_ya_raw <- ApiData (
urlToData = "07459",
Region = knr,
Kjonn = c(1, 2),
Alder = list("agg:TredeltGrupperingB2",
c("F20-64")),
Tid = c(as.character(2008:2017))
) $dataset %>%
select(-ContentsCode, -Alder)
View(pop_08_17_ya_raw)
# Her vil jeg foreslå å ikke hente ut dataset-biten direkte siden kjønnskoding er litt usikker
# Er 1, mann eller kvinne
pop_08_17_ya_raw <- ApiData (
urlToData = "07459",
Region = knr,
Kjonn = c(1, 2),
Alder = list("agg:TredeltGrupperingB2",
c("F20-64")),
Tid = c(as.character(2008:2017))
)
# Bearbeiding av befolkning
tmp <- pop_08_17_ya_raw$dataset %>%
mutate(
#henter kjønn fra første listen (beskrivelse listen). Bruker [1] for å unngå det lange navnet
Kjonn = pop_08_17_ya_raw[1]$kjønn
)
# Bearbeiding av befolkning
tmp <- pop_08_17_ya_raw$dataset %>%
mutate(
#henter kjønn fra første listen (beskrivelse listen). Bruker [1] for å unngå det lange navnet
Kjonn = pop_08_17_ya_raw[[1]]$kjønn
)
# Bearbeiding av befolkning
tmp <- pop_08_17_ya_raw$dataset %>%
mutate(
#henter kjønn fra første listen (beskrivelse listen). Bruker [[1]] for å unngå det lange navnet
Kjonn = pop_08_17_ya_raw[[1]]$kjønn
) %>%
select(
-Alder,
-ContentsCode
)
# Bearbeiding av befolkning
tmp <- pop_08_17_ya_raw$dataset %>%
mutate(
#henter kjønn fra første listen (beskrivelse listen). Bruker [[1]] for å unngå det lange navnet
Kjonn = pop_08_17_ya_raw[[1]]$kjønn
) %>%
select(
-Alder,
-ContentsCode
)
pop_08_17_ya_raw <- tmp
rm(tmp)
pop_08_17_ya <- pop_08_17_ya_raw %>%
pivot_wider(
id_cols = c(Region, Tid),
names_from = Kjonn,
names_prefix = "sex",
values_from = value
)
pop_08_17_ya <- pop_08_17_ya_raw %>%
pivot_wider(
id_cols = c(Region, Tid),
names_from = Kjonn,
values_from = value
)
View(pop_08_17_ya)
tail(pop_08_17_ya)
tail(pop_08_17_ya, n = 20)
# Bearbeiding av befolkning
tmp <- pop_08_17_ya_raw$dataset %>%
mutate(
#henter kjønn fra første listen (beskrivelse listen). Bruker [[1]] for å unngå det lange navnet
Kjonn = pop_08_17_ya_raw[[1]]$kjønn
)
# Bearbeiding av befolkning
tmp <- pop_08_17_ya_raw$dataset %>%
mutate(
#henter kjønn fra første listen (beskrivelse listen). Bruker [[1]] for å unngå det lange navnet
Kjonn = pop_08_17_ya_raw[[1]]$kjønn
)
# Her vil jeg foreslå å ikke hente ut dataset-biten direkte siden kjønnskoding er litt usikker
# Er 1, mann eller kvinne
pop_08_17_ya_raw <- ApiData (
urlToData = "07459",
Region = knr,
Kjonn = c(1, 2),
Alder = list("agg:TredeltGrupperingB2",
c("F20-64")),
Tid = c(as.character(2008:2017))
)
# Bearbeiding av befolkning
tmp <- pop_08_17_ya_raw$dataset %>%
mutate(
#henter kjønn fra første listen (beskrivelse listen). Bruker [[1]] for å unngå det lange navnet
Kjonn = pop_08_17_ya_raw[[1]]$kjønn
)
pop_08_17_ya_raw %>%
select(ContentsCode) %>%
table()
pop_08_17_ya_raw$dataset %>%
select(ContentsCode) %>%
table()
pop_08_17_ya_raw$dataset %>%
select(alder) %>%
table()
pop_08_17_ya_raw$dataset %>%
select(Alder) %>%
table()
View(pop_08_17_ya_raw)
pop_08_17_ya_raw$dataset %>%
filter(Region == "1106")
length(unique(paste0(pop_08_17_ya_raw$dataset$Region, pop_08_17_ya_raw$dataset$Tid)))
dim(pop_08_17_ya_raw$datase)
# Bearbeiding av befolkning
tmp <- pop_08_17_ya_raw$dataset %>%
mutate(
#henter kjønn fra første listen (beskrivelse listen). Bruker [[1]] for å unngå det lange navnet
Kjonn = pop_08_17_ya_raw[[1]]$kjønn
) %>%
select(
-Alder,
-ContentsCode
)
pop_08_17_ya_raw <- tmp
rm(tmp)
pop_08_17_ya <- pop_08_17_ya_raw %>%
pivot_wider(
id_cols = c(Region, Tid),
names_from = Kjonn,
values_from = value
)
pop_08_17_ya <- pop_08_17_ya_raw %>%
pivot_wider(
id_cols = c(Region, Tid),
names_from = Kjonn,
values_from = value
) %>%
rename(
knr = Region,
aar = Tid,
ya_menn = Menn,
ya_kvinenr = Kvinner
)
pop_08_17_ya <- pop_08_17_ya %>%
mutate(
ya_total = ya_menn + ya_kvinner
)
pop_08_17_ya <- pop_08_17_ya_raw %>%
pivot_wider(
id_cols = c(Region, Tid),
names_from = Kjonn,
values_from = value
) %>%
rename(
knr = Region,
aar = Tid,
ya_menn = Menn,
ya_kvinner = Kvinner
)
pop_08_17_ya <- pop_08_17_ya %>%
mutate(
ya_total = ya_menn + ya_kvinner
)
# unødvendig, navnet er satt i mutate
# names(pop_08_17_ya)[[5]] <- "ya_total"
dim(pop_08_17_ya)
names(pop_08_17_ya)
pop_08_17_raw <- ApiData (
urlToData = "07459",
Region = knr,
Kjonn = c(1, 2),
Alder = list("agg:TodeltGrupperingB",
c("H17", "H18")),
Tid = c(as.character(2008:2017))
) $dataset %>%
select(-ContentsCode)
# Igjen ville jeg her ikke tatt dataset direkte slik at jeg fikk tilgang til kjønn i første liste element
pop_08_17_raw <- ApiData (
urlToData = "07459",
Region = knr,
Kjonn = c(1,2),
Alder = list("agg:TodeltGrupperingB",
c("H17", "H18")),
Tid = c(as.character(2008:2017))
)
tmp <- pop_08_17_raw$dataset %>%
mutate(
Kjonn = pop_08_17_raw[[1]]$kjønn
) %>%
rename(
knr = Region,
alder = Alder,
aar = Tid,
)
tmp <- pop_08_17_raw$dataset %>%
mutate(
Kjonn = pop_08_17_raw[[1]]$kjønn
) %>%
rename(
knr = Region,
alder = Alder,
aar = Tid,
) %>%
select(-ContentsCode)
tmp <- pop_08_17_raw$dataset %>%
mutate(
Kjonn = pop_08_17_raw[[1]]$kjønn
) %>%
rename(
knr = Region,
alder = Alder,
aar = Tid,
) %>%
select(-ContentsCode)
pop_08_17_raw <- tmp
rm(tmp)
# Vil anbefale å først rename variablene før en gjør pivot_wider
pop_08_17 <- pop_08_17_raw %>%
pivot_wider(
names_from = Kjonn,
values_from = value
)
View(pop_08_17)
# Vil anbefale å først rename variablene før en gjør pivot_wider
pop_08_17 <- pop_08_17_raw %>%
pivot_wider(
names_from = Kjonn,
values_from = value
) %>%
pivot_wider(
names_from = alder,
values_from = c(Menn, Kvinner)
)
# Vil anbefale å først rename variablene før en gjør pivot_wider
pop_08_17 <- pop_08_17_raw %>%
pivot_wider(
names_from = Kjonn,
values_from = value
) %>%
pivot_wider(
names_from = alder,
values_from = c(Menn, Kvinner)
) %>%
mutate(
Menn = Menn_H17 + Menn_H18,
Kvinner = Kvinner_H17 + Kvinner_H18
Totalt = Menn + Kvinner
# Vil anbefale å først rename variablene før en gjør pivot_wider
pop_08_17 <- pop_08_17_raw %>%
pivot_wider(
names_from = Kjonn,
values_from = value
) %>%
pivot_wider(
names_from = alder,
values_from = c(Menn, Kvinner)
)
# Vil anbefale å først rename variablene før en gjør pivot_wider
pop_08_17 <- pop_08_17_raw %>%
pivot_wider(
names_from = Kjonn,
values_from = value
) %>%
pivot_wider(
names_from = alder,
values_from = c(Menn, Kvinner)
) %>%
mutate(
Menn = Menn_H17 + Menn_H18,
Kvinner = Kvinner_H17 + Kvinner_H18,
Totalt = Menn + Kvinner
) %>%
select(knr, aar, Menn, Kvinner, Totalt)
# Vil anbefale å først rename variablene før en gjør pivot_wider
pop_08_17 <- pop_08_17_raw %>%
pivot_wider(
names_from = Kjonn,
values_from = value
) %>%
pivot_wider(
names_from = alder,
values_from = c(Menn, Kvinner)
) %>%
mutate(
menn = Menn_H17 + Menn_H18,
kvinner = Kvinner_H17 + Kvinner_H18,
totalt = Menn + Kvinner
) %>%
select(knr, aar, Menn, Kvinner, Totalt)
# Vil anbefale å først rename variablene før en gjør pivot_wider
pop_08_17 <- pop_08_17_raw %>%
pivot_wider(
names_from = Kjonn,
values_from = value
) %>%
pivot_wider(
names_from = alder,
values_from = c(Menn, Kvinner)
) %>%
mutate(
menn = Menn_H17 + Menn_H18,
kvinner = Kvinner_H17 + Kvinner_H18,
totalt = Menn + Kvinner
) %>%
select(knr, aar, menn, kvinner, totalt)
# Vil anbefale å først rename variablene før en gjør pivot_wider
pop_08_17 <- pop_08_17_raw %>%
pivot_wider(
names_from = Kjonn,
values_from = value
) %>%
pivot_wider(
names_from = alder,
values_from = c(Menn, Kvinner)
) %>%
mutate(
menn = Menn_H17 + Menn_H18,
kvinner = Kvinner_H17 + Kvinner_H18,
totalt = menn + kvinner
) %>%
select(knr, aar, menn, kvinner, totalt)
ya_prosent <- cbind(pop_08_17[,1:2], (pop_08_17_ya[,3:5]/pop_08_17[,3:5])*100)
